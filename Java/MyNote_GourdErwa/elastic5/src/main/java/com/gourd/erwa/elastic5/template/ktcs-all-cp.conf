input {

  jdbc {
    jdbc_driver_library => "/usr/local/logstash/logstash-custom/lib/mysql-connector-java-5.1.39.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://s1201gsread.rdsmw3d9g6v2nox.rds.bj.baidubce.com:3306/logdb"
    jdbc_user => "read_user"
    jdbc_password => "1AD_g3TjtW2"
    schedule => "* * * * *"
    jdbc_paging_enabled => "true"
    jdbc_page_size => "1000"
    clean_run => true
    tracking_column => time
    tracking_column_type => timestamp
    use_column_value => true
    statement_filepath => "/usr/local/logstash/logstash-custom/config/sql/logdb_login_log.sql"
    type => "login_log"
    add_field => {
            "index_name" => "bi-login_log"
        }
  }

  jdbc {
    jdbc_driver_library => "/usr/local/logstash/logstash-custom/lib/mysql-connector-java-5.1.39.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://s120accountread.rdsmrtsvl70gqn5.rds.bj.baidubce.com:3306/accountdb"
    jdbc_user => "read_user"
    jdbc_password => "1AD_g3TjtW2"
    clean_run => true
    use_column_value => true
    tracking_column => id
    tracking_column_type => numeric
    schedule => "* * * * *"
    jdbc_paging_enabled => "true"
    jdbc_page_size => "50000"
    statement => "SELECT id,section_id,world_id,name,password,privilege,ip,time,reg_time,special_flag from account where id >  :sql_last_value"
    type => "account"
    add_field => {
            "index_name" => "bi-account"
        }
  }

  heartbeat {
    message => "epoch"
    interval => 60
    type => "logstash"
    add_field => {
         "index_name" => "heartbeat"
        }
    }
  tcp {
    port => 5160
  }


    http_poller {
      urls => {
        test2 => {
          method => "get"
          url => "http://localhost:9600/_node/stats"
          headers => {
            Accept => "application/json"
          }
        }
      }
      request_timeout => 60
      codec => "json"
      interval => 30
      type => "logstash-node-stats"
      add_field => {m
              "index_name" => "heartbeat"
          }
    }

  http_poller {
    urls => {
      test2 => {
        method => "get"
        url => "http://localhost:9201/_cluster/health"
        headers => {
          Accept => "application/json"
        }
      }
    }
    request_timeout => 60
    codec => "json"
    interval => 60
    type => "elastic"
    add_field => {
            "index_name" => "heartbeat"
        }
  }

  http_poller {
    urls => {
      test1 => {
        method => "get"
        url => "http://172.17.10.31:50070/jmx?qry=Hadoop:service=NameNode,name=FSNamesystemState"
        headers => {
          Accept => "application/json"
        }
      }
    }
    request_timeout => 60
    codec => "json"
    interval => 60
    type => "hadoop"
    add_field => {
            "index_name" => "heartbeat"
        }
  }

  generator {
        count => 100000000
        threads => 3
        message => '{"template":"biniasdiasdlkashdkjasndkjasndkjnkxvnkdnvsdfjdkfewowfjmdks","order":13511,"mappings":{"_default_":{"dynamic_templates":[{"message_field":{"path_match":"mesdfsdfssage","match_mapping_type":"string","mapping":{"type":"text","norms":false}}},{"string_fields":{"match":"sdfsdfsdfcxvxcvbwoekfpewf,;wef,ew;l,cb,mnvbfdneewweweeeeeeeeeeeeeeeexcvbcvbvbvbefe*","match_mapping_type":"string","mapping":{"type":"keyword","norms":false}}},{"ip_fields":{"match":"i131321321v13x2cv13cx21v3p","match_mapping_type":"string","mapping":{"type":"ip","norms":false}}}],"properties":{"@timestamp":{"type":"date","include_in_all":false},"@version":{"type":"keyword","include_in_all":false}}}}}'
        type => "generator"
        add_field => {
            "index_name" => "bi-generator"
        }
        codec => json
   }

  generator {
        count => 100000000
        threads => 3
        message => '{"template":"biniasdiasdlkashdkjasndkjasndkjnkxvnkdnvsdfjdkfewowfjmdks","order":13511,"mappings":{"_default_":{"dynamic_templates":[{"message_field":{"path_match":"mesdfsdfssage","match_mapping_type":"string","mapping":{"type":"text","norms":false}}},{"string_fields":{"match":"sdfsdfsdfcxvxcvbwoekfpewf,;wef,ew;l,cb,mnvbfdneewweweeeeeeeeeeeeeeeexcvbcvbvbvbefe*","match_mapping_type":"string","mapping":{"type":"keyword","norms":false}}},{"ip_fields":{"match":"i131321321v13x2cv13cx21v3p","match_mapping_type":"string","mapping":{"type":"ip","norms":false}}}],"properties":{"@timestamp":{"type":"date","include_in_all":false},"@version":{"type":"keyword","include_in_all":false}}}}}'
        type => "generator"
        add_field => {
            "index_name" => "bi-generator"
        }
        codec => json
   }

}


output {

    if [index_name] == "heartbeat" {
     elasticsearch {
        hosts => [ "172.17.10.39:9201","172.17.10.33:9202","172.17.10.33:9203"]
        document_type => "%{type}"
        index => "%{index_name}-%{+YYYY.MM}"
        flush_size => 1000000
        idle_flush_time => 2
      }
    } else {
     elasticsearch {
        hosts => [ "172.17.10.39:9201","172.17.10.33:9202","172.17.10.33:9203"]
        document_type => "%{type}"
        index => "%{index_name}"
        flush_size => 1000000
        idle_flush_time => 2
     }
    }

}
